openapi: 3.0.3
info:
  title: SynthAIze API
  version: 1.0.0
  description: The **SynthAIze API** is a platform for managing AI models, datasets,
    and performance metrics with user authentication and role-based access control
    to streamline AI model deployment and evaluation.
paths:
  /api/v1/users/:
    get:
      operationId: api_v1_users_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/observers/:
    get:
      operationId: api_v1_users_observers_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/signin/:
    post:
      operationId: api_v1_users_signin_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Signin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Signin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signin'
          description: ''
  /api/v1/users/signup/:
    post:
      operationId: api_v1_users_signup_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSerializerWithToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSerializerWithToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSerializerWithToken'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializerWithToken'
          description: ''
  /api/v1/users/synthesists/:
    get:
      operationId: api_v1_users_synthesists_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/token/refresh/:
    post:
      operationId: api_v1_users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/users/token/verify/:
    post:
      operationId: api_v1_users_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    RoleEnum:
      enum:
      - Admin
      - Synthesist
      - Observer
      type: string
      description: |-
        * `Admin` - Admin
        * `Synthesist` - Synthesist
        * `Observer` - Observer
    Signin:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        isAdmin:
          type: string
          readOnly: true
      required:
      - email
      - isAdmin
      - name
      - role
      - uuid
    UserSerializerWithToken:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        isAdmin:
          type: string
          readOnly: true
        token:
          type: string
          readOnly: true
      required:
      - email
      - isAdmin
      - name
      - role
      - token
      - uuid
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
